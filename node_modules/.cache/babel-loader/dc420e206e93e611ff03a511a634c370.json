{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charu\\\\Desktop\\\\Project_Board-main\\\\frontend\\\\src\\\\components\\\\Todos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useNavigate, NavLink } from 'react-router-dom';\nimport { Row, Col, Container, Fade, Button, ListGroup, Badge } from 'react-bootstrap';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport '../stylesheets/todos.css';\nimport TodoForm from './TodoForm';\nimport { UserContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SideNavbar = () => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const [fecthTasks, setFecthTasks] = useState();\n  const [tasks, setTasks] = useState([]);\n  const [taskUpdate, setTaskUpdate] = useState();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => {\n    setShow(false);\n    setTaskUpdate(null);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const showTasks = async () => {\n    try {\n      const response = await fetch('/showTasks', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      console.log(data);\n      setTasks(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    showTasks();\n  }, [fecthTasks]);\n\n  const handleClick = e => {\n    const taskId = e.target.id;\n    const findTask = tasks.find(clickedTask => clickedTask._id === taskId);\n    let oldDate = new Date(findTask.date);\n    let day = oldDate.getDate();\n    let month = oldDate.getMonth() + 1;\n    let year = oldDate.getFullYear();\n    if (month < 10) month = \"0\" + month;\n    if (day < 10) day = \"0\" + day;\n    let fullDate = year + \"-\" + month + \"-\" + day;\n    findTask.date = fullDate;\n    setTaskUpdate(findTask); // taskUpdate = findTask;\n    // taskUpdate.current = findTask;\n    // navigate(\"/updateForm\", {state : {findTask}})\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      className: \"navList\",\n      onClick: handleShow,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-tasks\",\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), ' ', \"To-Do List\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        className: \"todoOffCanvas\",\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"To-Do-List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        className: \"todoOffCanvas\",\n        children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n          clickedTask: {\n            taskUpdate,\n            setFecthTasks\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          className: \"todosContainer\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(ListGroup, {\n                as: \"ol\",\n                variant: \"flush\",\n                numbered: true,\n                className: \"todosList\",\n                children: tasks.map((tasks, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  as: \"li\",\n                  className: \"d-flex justify-content-between align-items-start todosList\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"category\",\n                    className: \"ms-2 me-auto\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      id: tasks._id,\n                      onClick: handleClick,\n                      className: \"fw-bold cursor-pointer\",\n                      children: tasks.task\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 23\n                    }, this), tasks.category]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                    id: \"date\",\n                    bg: \"primary\",\n                    pill: true,\n                    className: \"badgeList\",\n                    children: ['Due Date: ', new Date(tasks.date).toLocaleDateString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SideNavbar, \"ObbmrDFChMiy4l3CUX85tWnX+xM=\");\n\n_c = SideNavbar;\nexport default SideNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideNavbar\");","map":{"version":3,"sources":["C:/Users/Charu/Desktop/Project_Board-main/frontend/src/components/Todos.js"],"names":["React","useState","useEffect","useContext","useRef","useNavigate","NavLink","Row","Col","Container","Fade","Button","ListGroup","Badge","Offcanvas","TodoForm","UserContext","SideNavbar","state","dispatch","fecthTasks","setFecthTasks","tasks","setTasks","taskUpdate","setTaskUpdate","show","setShow","handleClose","handleShow","showTasks","response","fetch","method","data","json","console","log","error","handleClick","e","taskId","target","id","findTask","find","clickedTask","_id","oldDate","Date","date","day","getDate","month","getMonth","year","getFullYear","fullDate","map","index","task","category","toLocaleDateString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useNavigate, NavLink } from 'react-router-dom'\nimport { Row, Col,Container, Fade, Button, ListGroup, Badge } from 'react-bootstrap';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport '../stylesheets/todos.css'\nimport TodoForm from './TodoForm';\nimport { UserContext } from '../App'\n\nconst SideNavbar = () => {\n\n    const {state, dispatch} = useContext(UserContext);  \n    const [fecthTasks, setFecthTasks] = useState();\n    const [tasks, setTasks] = useState([]);\n    const [taskUpdate, setTaskUpdate] = useState();\n    const [show, setShow] = useState(false);\n    const handleClose = () => {\n      setShow(false);\n      setTaskUpdate(null);\n    }\n    const handleShow = () => setShow(true);\n    \n\n\n    \n    const showTasks = async () =>{\n        try {\n          const response = await fetch('/showTasks', { \n            method: 'GET', \n        });\n  \n        const data = await response.json();\n        console.log(data) \n        setTasks(data);\n        } catch (error) {\n          console.log(error)\n        }\n      \n    }\n\n  useEffect(() =>{\n      showTasks();\n  },[fecthTasks])\n\n\n  const handleClick = (e) =>{\n    \n    const taskId = e.target.id;\n\n    const findTask = tasks.find(clickedTask => clickedTask._id === taskId);\n\n    let oldDate = new Date(findTask.date)\n    let day = oldDate.getDate();\n    let month = oldDate.getMonth() + 1;\n    let year = oldDate.getFullYear();\n        \n    if (month < 10) month = \"0\" + month;\n    if (day < 10) day = \"0\" + day;\n\n    let fullDate = year+\"-\"+month+\"-\"+day;\n\n    findTask.date = fullDate;\n\n    setTaskUpdate(findTask)\n      // taskUpdate = findTask;\n    // taskUpdate.current = findTask;\n    // navigate(\"/updateForm\", {state : {findTask}})\n    \n  }\n\n    return ( \n        <>\n        <ListGroup.Item className='navList' onClick={handleShow}>\n          <i className='fas fa-tasks'>&nbsp;</i>         \n          {' '}\n          To-Do List\n        </ListGroup.Item> \n\n      <Offcanvas show={show} onHide={handleClose} >\n        <Offcanvas.Header closeButton className='todoOffCanvas'>\n          <Offcanvas.Title>To-Do-List</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body className='todoOffCanvas'>\n        <TodoForm clickedTask={{taskUpdate, setFecthTasks}}/>\n          <Container className='todosContainer'>\n              <Row>\n                <Col>\n                  <ListGroup as=\"ol\" variant=\"flush\" numbered className='todosList'>\n                    {tasks.map( (tasks, index) =>\n                      <ListGroup.Item as=\"li\" key={index}  className=\"d-flex justify-content-between align-items-start todosList\">\n                      <div id='category' className=\"ms-2 me-auto\">\n                      <div id={tasks._id} onClick={handleClick} className=\"fw-bold cursor-pointer\">\n  {tasks.task}\n</div>\n\n                        {tasks.category}\n                      </div>\n                      <Badge id='date' bg=\"primary\" pill className='badgeList'>\n                        {'Due Date: '}{ new Date(tasks.date).toLocaleDateString()}\n                      </Badge>\n                    </ListGroup.Item>\n                    )}\n                  </ListGroup>\n                </Col>\n              </Row>\n            </Container>\n            \n            \n            \n        </Offcanvas.Body>\n      </Offcanvas>\n\n    </>\n  )\n}\n\nexport default SideNavbar\n\n\n\n"]},"metadata":{},"sourceType":"module"}