{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Charu\\\\Desktop\\\\Project_Board-main\\\\frontend\\\\src\\\\components\\\\MyNotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useLayoutEffect, useEffect } from 'react';\nimport '../stylesheets/displayProjects.css';\nimport { Row, Col, Container, Card, CardGroup, ProgressBar, Navbar, Nav, NavDropdown, Form, Image, Button, ListGroup, Offcanvas, InputGroup, Modal } from 'react-bootstrap';\nimport CreateNotes from './CreateNotes';\nimport UpdateNotes from './UpdateNotes';\nimport DeleteNote from './DeleteNote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyNotes = () => {\n  _s();\n\n  const [fullscreen, setFullscreen] = useState(true);\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => {\n    setFullscreen(true);\n    setShow(true);\n  };\n\n  const handleHideModal = () => {\n    setShow(false);\n  };\n\n  const [smShow, setSmShow] = useState(false);\n  const [myNotes, setMyNotes] = useState([]);\n  const [currentNote, setCurrentNote] = useState();\n\n  const handleHideSelectionModal = () => {\n    setCurrentNote(\"\");\n    setSmShow(false);\n  };\n\n  const [fecthTasks, setFecthTasks] = useState();\n\n  const getNotes = async () => {\n    try {\n      const response = await fetch('/getallNotes', {\n        method: 'GET'\n      });\n      const data = await response.json();\n      console.log(data);\n      setMyNotes(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getNotes();\n  }, [fecthTasks]);\n\n  const clickedNote = e => {\n    let noteId = e.target.id;\n    let getnote = myNotes.find(element => element._id === noteId);\n    setCurrentNote(getnote);\n    setSmShow(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      className: \"navList\",\n      onClick: handleShow,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-sticky-note\",\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), ' ', \"My Notes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      fullscreen: fullscreen,\n      onHide: handleHideModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              sm: true,\n              lg: \"5\",\n              children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"My Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: true,\n              lg: \"6\",\n              children: [/*#__PURE__*/_jsxDEV(Container, {\n                children: /*#__PURE__*/_jsxDEV(CreateNotes, {\n                  props: {\n                    setFecthTasks\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-md-center\",\n            children: myNotes.map((element, index) => /*#__PURE__*/_jsxDEV(Col, {\n              sm: true,\n              lg: \"4\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                className: \"notesCont\",\n                id: element._id,\n                onClick: clickedNote,\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [\"Title: \", element.noteTitle]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Note:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 28\n                  }, this), \" \", element.noteText]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Date: \", element.noteDate.substring(0, 10)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"sm\",\n      show: smShow,\n      onHide: handleHideSelectionModal,\n      \"aria-labelledby\": \"example-modal-sizes-title-sm\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"modalHeader\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"example-modal-sizes-title-sm\",\n          className: \"titleSelection\",\n          children: \"Choose For Selected Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"modalBody\",\n        children: [/*#__PURE__*/_jsxDEV(UpdateNotes, {\n          noteData: {\n            currentNote,\n            setFecthTasks\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(DeleteNote, {\n          noteData: {\n            currentNote,\n            setFecthTasks\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyNotes, \"Mk+Lk2MpmdvRll5/fu1N+TYfqgw=\");\n\n_c = MyNotes;\nexport default MyNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyNotes\");","map":{"version":3,"sources":["C:/Users/Charu/Desktop/Project_Board-main/frontend/src/components/MyNotes.js"],"names":["React","useState","useLayoutEffect","useEffect","Row","Col","Container","Card","CardGroup","ProgressBar","Navbar","Nav","NavDropdown","Form","Image","Button","ListGroup","Offcanvas","InputGroup","Modal","CreateNotes","UpdateNotes","DeleteNote","MyNotes","fullscreen","setFullscreen","show","setShow","handleShow","handleHideModal","smShow","setSmShow","myNotes","setMyNotes","currentNote","setCurrentNote","handleHideSelectionModal","fecthTasks","setFecthTasks","getNotes","response","fetch","method","data","json","console","log","error","clickedNote","e","noteId","target","id","getnote","find","element","_id","map","index","noteTitle","noteText","noteDate","substring"],"mappings":"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","sourcesContent":["import React, {useState, useLayoutEffect, useEffect} from 'react'\nimport '../stylesheets/displayProjects.css'\nimport { Row, Col, Container, Card, CardGroup, ProgressBar, Navbar, Nav, NavDropdown, Form, Image, Button, ListGroup, Offcanvas, InputGroup, Modal } from 'react-bootstrap';\nimport CreateNotes from './CreateNotes';\nimport UpdateNotes from './UpdateNotes';\nimport DeleteNote from './DeleteNote';\n\n\nconst MyNotes = () => {\n\n    const [fullscreen, setFullscreen] = useState(true);\n    const [show, setShow] = useState(false);\n    const handleShow = () => {setFullscreen(true); setShow(true);}\n    const handleHideModal = () =>{setShow(false);}\n    const [smShow, setSmShow] = useState(false);\n    const [myNotes, setMyNotes] = useState([]);\n    const [currentNote, setCurrentNote] = useState();\n    const handleHideSelectionModal = () =>{setCurrentNote(\"\"); setSmShow(false);}\n    const [fecthTasks, setFecthTasks] = useState();\n\n\n\n    const getNotes = async () =>{\n      try {\n          const response = await fetch('/getallNotes', {\n              method: 'GET',\n          })\n\n          const data = await response.json();\n          console.log(data)\n          setMyNotes(data);\n\n      } catch (error) {\n          console.log(error)\n      }\n\n  }\n\n  useEffect(() => {\n    getNotes();\n  },[fecthTasks])\n\n\n  const clickedNote = (e) =>{\n      let noteId = e.target.id;\n      let getnote = myNotes.find(element => element._id === noteId);\n      setCurrentNote(getnote);\n      setSmShow(true);\n  }\n\n\n  return (\n    <>\n        <ListGroup.Item className='navList' onClick={handleShow}>\n          <i className='fa fa-sticky-note'>&nbsp;</i>         \n          {' '}\n          My Notes\n        </ListGroup.Item>\n\n        <Modal show={show} fullscreen={fullscreen} onHide={handleHideModal}>\n            <Modal.Header closeButton className='modalHeader'>\n              <Container>\n                <Row className=\"justify-content-md-center\">\n                  <Col sm lg=\"5\">\n                    <Modal.Title>My Notes</Modal.Title>\n                    <br></br>\n                  </Col>\n                  <Col sm lg=\"6\">\n                    <Container ><CreateNotes props={{setFecthTasks}}/></Container>\n                    <br></br>\n                  </Col>\n                </Row>\n              </Container>  \n            </Modal.Header>\n            <Modal.Body className='modalBody'>\n              \n              <br></br>\n              <Container>\n                <Row className=\"justify-content-md-center\">\n                  {myNotes.map((element, index)=>\n                    <Col sm lg=\"4\" key={index}>\n                      <ListGroup.Item className='notesCont' id={element._id} onClick={clickedNote}>\n                        <h5>Title: {element.noteTitle}</h5>\n                        <br></br>\n                        <p><b>Note:</b> {element.noteText}</p>\n                        <br></br>\n                        <p>Date: {element.noteDate.substring(0,10)}</p>\n                      </ListGroup.Item>\n                      <br></br>\n                    </Col>\n                  )}\n                </Row>\n              </Container>\n            </Modal.Body>\n        </Modal>\n\n\n\n\n        <Modal size=\"sm\" show={smShow} onHide={handleHideSelectionModal} aria-labelledby=\"example-modal-sizes-title-sm\" >\n            <Modal.Header closeButton className='modalHeader'>\n                <Modal.Title id=\"example-modal-sizes-title-sm\" className='titleSelection'>\n                    Choose For Selected Note\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body className='modalBody'>\n              <UpdateNotes noteData={{currentNote, setFecthTasks}}/>              \n              <br></br>\n              <DeleteNote noteData={{currentNote, setFecthTasks}}/>\n              <br></br>\n            </Modal.Body>\n        </Modal>\n    </>\n  )\n}\n\nexport default MyNotes"]},"metadata":{},"sourceType":"module"}